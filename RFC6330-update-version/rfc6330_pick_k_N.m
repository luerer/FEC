% Copyright (c) 2013, Ravichandran
% All rights reserved.
% 
% Redistribution and use in the source code, with or without 
% modification, are permitted provided that the following conditions are 
% met:
% 
%     * Redistributions of source code must retain the above copyright 
%       notice, this list of conditions and the following disclaimer.
%           
% THIS SOURCE CODE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED 
% TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
% CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
% PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
% WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN 
% IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



function  [recESIs recSyms] = rfc6330_pick_k_N(infile, outfile, seed, k, N, K)

% Channel which gets all the encoding symbols and corresponding ESIs that
% are generated by the encoder and selects k number of symbols and passes them
% to the decoder at the receiver end.

% Inputs:

% infile: File containing all the N encoded symbols and there corresponding ESIs
% outfile: File containing the reandomly selected symbols and there corresponding ESIs
% seed: Channel parameter which is used to initialize the random number generator
% k: Channel parameter which tells the number of symbols selected by the channel

% Outputs:

% recESI: ESIs of the symbols selected by the channel
% recSyms: Symbols that are selected by the channel and feed into the decoder


% Read the ESIs and the Encoded symbols generated by the encoder from infile
inputArr = dlmread(infile);
recESIs = inputArr(:,1);
recSyms = inputArr(:,2:end);
RecESIs = [];

% Initialize the random generator by specifiying ther method 'twister' and parameter 'seed'
rand('twister', seed);

% Channel randomly selects the k symbols from the given N symbols 
for  ind= 0:(length(recESIs)-1)
  
        if (mod(floor(1000* rand),(length(recESIs)-ind))< k)
            RecESIs =[RecESIs ; ind];
            k=k-1;
        end
    
end

recESIs = RecESIs
recSyms = recSyms(recESIs+1,:)
if (length(RecESIs) < K)
    disp('Insufficient number of collected symbols!')
    disp('Decoding will fail!')
end  

% Write the concatenation of the recESIs and recSyms into the outfile.
dlmwrite(outfile,[recESIs recSyms], ' ')
